import re

# Function to modify tvg-id when tvg-id is "", "(no tvg-id)", contains "astro", contains "dummy", or missing
def modify_tvgid_with_channel_name(line):
    # Match lines starting with #EXTINF: and extract tvg-id value and the channel name after the last comma
    match = re.match(r'(#EXTINF:.*?tvg-id=")(.*?)(".*?)(,.*?)([^,]+)$', line)
    
    # If the line matches the expected pattern, check tvg-id and modify it if needed
    if match:
        tvg_id_value = match.group(2).strip()  # The current tvg-id value
        tvg_name = match.group(5).strip()      # The channel name after the last comma
        
        # Check if tvg-id is "", "(no tvg-id)", contains "astro", or contains "dummy"
        if tvg_id_value == "" or tvg_id_value == "(no tvg-id)" or "netflix" in tvg_id_value.lower() or "samsung" in tvg_id_value.lower() or "usb" in tvg_id_value.lower() or "astro" in tvg_id_value.lower() or "dummy" in tvg_id_value.lower():
            # Modify the tvg-id value to be the tvg_name
            modified_line = match.group(1) + tvg_name + match.group(3) + match.group(4) + tvg_name
            
            # Print the modified full line for debugging
            print(f"Replaced line: {modified_line}")
            
            return modified_line + "\n"  # Add newline only after replacement
        else:
            # If tvg-id already has a valid value (doesn't match conditions), return the line unchanged
            return line
    else:
        # If the line doesn't match the expected pattern, return it unchanged
        return line

# Read the input file (JAPONESE)
with open('JAPONESE', 'r', encoding='utf-8') as infile:
    lines = infile.readlines()

# Process the first 20 lines and print replaced lines for debugging
print("Processing first 20 lines:")

# Process only the first 20 lines for debugging
for i, line in enumerate(lines[:20]):  # Limit to first 20 lines
    print(f"Line {i + 1}:")
    modify_tvgid_with_channel_name(line)  # Print replaced line for the current line

# Apply modification to all lines
modified_lines = [modify_tvgid_with_channel_name(line) for line in lines]

# Write the modified content to the output file (trenching.m3u)
with open('trenching.m3u', 'w', encoding='utf-8') as outfile:
    outfile.writelines(modified_lines)

print("File processing complete. The modified content is saved in 'trenching.m3u'.")
